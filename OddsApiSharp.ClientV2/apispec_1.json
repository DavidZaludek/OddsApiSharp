{
  "basePath": "/",
  "definitions": {},
  "host": "api-v2.oddspapi.io",
  "info": {
    "description": "This is the API documentation for our Odds API. To get an API key and access to our Websocket, please contact baptistebapro@gmail.com",
    "title": "ODDS-API",
    "version": "4"
  },
  "paths": {
    "/api/v2/bookmakers": {
      "get": {
        "operationId": "getBookmakers",
        "parameters": [
          {
            "default": false,
            "description": "Include additional metadata about the bookmakers (True or False)",
            "in": "query",
            "name": "meta",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of bookmakers",
            "schema": {
              "items": {
                "properties": {
                  "bookmakerName": {
                    "description": "The name of the bookmaker (e.g., 'Bet365')",
                    "type": "string"
                  },
                  "bookmakerSlug": {
                    "description": "The unique slug of the bookmaker (e.g., 'bet365')",
                    "type": "string"
                  },
                  "country": {
                    "description": "The country where the bookmaker operates (e.g., 'UK')",
                    "type": "string"
                  },
                  "metadata": {
                    "description": "Additional metadata about the bookmaker (optional, returned if meta=True)",
                    "properties": {
                      "established": {
                        "description": "The year the bookmaker was established",
                        "type": "integer"
                      },
                      "website": {
                        "description": "The official website URL of the bookmaker",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "summary": "Get a list of bookmakers",
        "tags": [ "Bookmakers" ]
      }
    },
    "/api/v2/currencies": {
      "get": {
        "operationId": "getCurrencies",
        "responses": {
          "200": {
            "description": "A list of currencies",
            "schema": {
              "items": {
                "properties": {
                  "currencyCode": {
                    "description": "The three-letter currency code (e.g., 'USD', 'EUR', 'GBP')",
                    "type": "string"
                  },
                  "currencyName": {
                    "description": "The name of the currency (e.g., 'US Dollar', 'Euro', 'British Pound')",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "summary": "Get a list of available currencies",
        "tags": [ "Other" ]
      }
    },
    "/api/v2/events": {
      "get": {
        "operationId": "getEvents1",
        "parameters": [
          {
            "description": "Filter by tournamentId (primary parameter)",
            "in": "query",
            "name": "tournamentId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter by sportId (primary parameter)",
            "in": "query",
            "name": "sportId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter by participantId (primary parameter)",
            "in": "query",
            "name": "participantId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter by playerId (primary parameter)",
            "in": "query",
            "name": "playerId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "A grouped list of tournaments and fixtures including events",
            "schema": {
              "properties": {
                "sportId": {
                  "description": "The ID of the sport",
                  "type": "integer"
                },
                "sportName": {
                  "description": "The name of the sport",
                  "type": "string"
                },
                "tournaments": {
                  "items": {
                    "properties": {
                      "categoryName": {
                        "description": "The category name of the tournament",
                        "type": "string"
                      },
                      "fixtures": {
                        "items": {
                          "properties": {
                            "externalProviders": {
                              "properties": {
                                "betgeniusId": {
                                  "description": "The BetGenius ID",
                                  "type": "integer"
                                },
                                "betradarId": {
                                  "description": "The BetRadar ID",
                                  "type": "integer"
                                },
                                "flashscoreId": {
                                  "description": "The FlashScore ID",
                                  "type": "string"
                                },
                                "sofascoreId": {
                                  "description": "The SofaScore ID",
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "fixtureId": {
                              "description": "The ID of the fixture",
                              "type": "string"
                            },
                            "participant1Name": {
                              "description": "The name of the first participant",
                              "type": "string"
                            },
                            "participant2Name": {
                              "description": "The name of the second participant",
                              "type": "string"
                            },
                            "startTime": {
                              "description": "The start time of the fixture (epoch timestamp)",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "tournamentId": {
                        "description": "The ID of the tournament",
                        "type": "integer"
                      },
                      "tournamentName": {
                        "description": "The name of the tournament",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "security": [ { "QueryApiKeyAuth": [] } ],
        "summary": "Get in-play actions by tournamentId, sportId, participantId or playerId",
        "tags": [ "In-Play Events" ]
      }
    },
    "/api/v2/fixtures": {
      "get": {
        "operationId": "getFixtures1",
        "parameters": [
          {
            "description": "Filter by tournamentId (primary parameter)",
            "in": "query",
            "name": "tournamentId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter by sportId (primary parameter)",
            "in": "query",
            "name": "sportId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter by participantId (primary parameter)",
            "in": "query",
            "name": "participantId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter by playerId (primary parameter)",
            "in": "query",
            "name": "playerId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A single bookmaker slug (primary parameter)",
            "in": "query",
            "name": "bookmaker",
            "required": false,
            "type": "string"
          },
          {
            "default": true,
            "description": "Whether bookmaker fixtures must overlap (AND logic)  (secondary parameter)",
            "in": "query",
            "name": "overlap",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A grouped list of tournaments and fixtures",
            "schema": {
              "properties": {
                "sportId": {
                  "description": "The ID of the sport",
                  "type": "integer"
                },
                "sportName": {
                  "description": "The name of the sport",
                  "type": "string"
                },
                "tournaments": {
                  "items": {
                    "properties": {
                      "categoryName": {
                        "description": "The category name of the tournament",
                        "type": "string"
                      },
                      "fixtures": {
                        "items": {
                          "properties": {
                            "externalProviders": {
                              "properties": {
                                "betgeniusId": {
                                  "description": "The BetGenius ID",
                                  "type": "integer"
                                },
                                "betradarId": {
                                  "description": "The BetRadar ID",
                                  "type": "integer"
                                },
                                "flashscoreId": {
                                  "description": "The FlashScore ID",
                                  "type": "string"
                                },
                                "sofascoreId": {
                                  "description": "The SofaScore ID",
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "fixtureId": {
                              "description": "The ID of the fixture",
                              "type": "string"
                            },
                            "participant1Name": {
                              "description": "The name of the first participant",
                              "type": "string"
                            },
                            "participant2Name": {
                              "description": "The name of the second participant",
                              "type": "string"
                            },
                            "startTime": {
                              "description": "The start time of the fixture (epoch timestamp)",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "tournamentId": {
                        "description": "The ID of the tournament",
                        "type": "integer"
                      },
                      "tournamentName": {
                        "description": "The name of the tournament",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "security": [ { "QueryApiKeyAuth": [] } ],
        "summary": "Get fixtures with odds and external providers by tournamentId, sportId, participantId, playerId or bookmaker",
        "tags": [ "Fixtures" ]
      }
    },
    "/api/v2/fixtures/live": {
      "get": {
        "operationId": "getFixtures3",
        "responses": {
          "200": {
            "description": "A grouped list of live fixtures and their metadata",
            "schema": {
              "items": {
                "properties": {
                  "categoryName": {
                    "description": "The category name of the tournament",
                    "type": "string"
                  },
                  "externalProviders": {
                    "properties": {
                      "betgeniusId": { "type": "integer" },
                      "betradarId": { "type": "integer" },
                      "flashscoreId": { "type": "string" },
                      "sofascoreId": { "type": "integer" }
                    },
                    "type": "object"
                  },
                  "fixtureId": {
                    "description": "The ID of the fixture",
                    "type": "string"
                  },
                  "live": {
                    "description": "Whether the fixture is live",
                    "type": "boolean"
                  },
                  "participant1Name": {
                    "description": "The name of the first participant",
                    "type": "string"
                  },
                  "participant2Name": {
                    "description": "The name of the second participant",
                    "type": "string"
                  },
                  "sportId": {
                    "description": "The ID of the sport",
                    "type": "integer"
                  },
                  "sportName": {
                    "description": "The name of the sport",
                    "type": "string"
                  },
                  "startTime": {
                    "description": "The start time of the fixture (epoch timestamp)",
                    "type": "integer"
                  },
                  "stats": {
                    "description": "Additional live fixture stats",
                    "type": "object"
                  },
                  "tournamentId": {
                    "description": "The ID of the tournament",
                    "type": "integer"
                  },
                  "tournamentName": {
                    "description": "The name of the tournament",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "security": [ { "QueryApiKeyAuth": [] } ],
        "summary": "Get live fixtures with odds and additional metadata",
        "tags": [ "Fixtures" ]
      }
    },
    "/api/v2/fixtures/today": {
      "get": {
        "operationId": "getFixtures2",
        "responses": {
          "200": {
            "description": "A grouped list of today's tournaments and fixtures with odds",
            "schema": {
              "items": {
                "properties": {
                  "sportId": {
                    "description": "The ID of the sport",
                    "type": "integer"
                  },
                  "sportName": {
                    "description": "The name of the sport",
                    "type": "string"
                  },
                  "tournaments": {
                    "items": {
                      "properties": {
                        "categoryName": {
                          "description": "The category name of the tournament",
                          "type": "string"
                        },
                        "fixtures": {
                          "items": {
                            "properties": {
                              "externalProviders": {
                                "properties": {
                                  "betgeniusId": {
                                    "description": "The BetGenius ID",
                                    "type": "integer"
                                  },
                                  "betradarId": {
                                    "description": "The BetRadar ID",
                                    "type": "integer"
                                  },
                                  "flashscoreId": {
                                    "description": "The FlashScore ID",
                                    "type": "string"
                                  },
                                  "sofascoreId": {
                                    "description": "The SofaScore ID",
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "fixtureId": {
                                "description": "The ID of the fixture",
                                "type": "string"
                              },
                              "participant1Name": {
                                "description": "The name of the first participant",
                                "type": "string"
                              },
                              "participant2Name": {
                                "description": "The name of the second participant",
                                "type": "string"
                              },
                              "startTime": {
                                "description": "The start time of the fixture (epoch timestamp)",
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "tournamentId": {
                          "description": "The ID of the tournament",
                          "type": "integer"
                        },
                        "tournamentName": {
                          "description": "The name of the tournament",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "security": [ { "QueryApiKeyAuth": [] } ],
        "summary": "Get today's fixtures with odds grouped by sport and tournament",
        "tags": [ "Fixtures" ]
      }
    },
    "/api/v2/historical/events": {
      "get": {
        "operationId": "getHistEvents",
        "parameters": [
          {
            "description": "The fixture ID",
            "in": "query",
            "name": "fixtureId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Events for the specified fixture",
            "schema": { "type": "object" }
          }
        },
        "security": [ { "QueryApiKeyAuth": [] } ],
        "summary": "Get in-play events for a finished fixture",
        "tags": [ "Historical Data" ]
      }
    },
    "/api/v2/historical/fixtures": {
      "get": {
        "operationId": "getHistFixtures",
        "parameters": [
          {
            "description": "Filter by tournamentId (primary parameter)",
            "in": "query",
            "name": "tournamentId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter by participantId (primary parameter)",
            "in": "query",
            "name": "participantId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter by playerId (primary parameter)",
            "in": "query",
            "name": "playerId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Comma-separated list of fixture IDs to filter by (primary parameter)",
            "in": "query",
            "name": "fixtureIds",
            "required": false,
            "type": "string"
          }
        ],
        "responses": { "200": { "description": "A grouped list of tournaments and fixtures" } },
        "summary": "Get all historical fixtures and external providers by tournamentId, participantId, playerId, or fixtureIds",
        "tags": [ "Historical Data" ]
      }
    },
    "/api/v2/historical/odds": {
      "get": {
        "operationId": "getHistOdds",
        "parameters": [
          {
            "description": "The fixture ID",
            "in": "query",
            "name": "fixtureId",
            "required": true,
            "type": "string"
          },
          {
            "description": "A string of bookmaker slugs (comma-separated)",
            "in": "query",
            "name": "bookmakers",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Odds for the specified fixture and bookmakers",
            "schema": { "type": "object" }
          }
        },
        "security": [ { "QueryApiKeyAuth": [] } ],
        "summary": "Get odds for a finished fixture and multiple bookmakers",
        "tags": [ "Historical Data" ]
      }
    },
    "/api/v2/languages": {
      "get": {
        "operationId": "getLanguages",
        "responses": {
          "200": {
            "description": "A list of available languages",
            "schema": {
              "items": {
                "properties": {
                  "languageCode": {
                    "description": "The language code (e.g., 'en', 'es', 'de')",
                    "type": "string"
                  },
                  "languageName": {
                    "description": "The name of the language (e.g., 'English', 'Spanish', 'German')",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "summary": "Get a list of available languages",
        "tags": [ "Other" ]
      }
    },
    "/api/v2/liquidity/fixtures/top100": {
      "get": {
        "operationId": "getFixtures4",
        "parameters": [
          {
            "description": "Comma-separated list of bookmaker slugs to filter (optional)",
            "in": "query",
            "name": "bookmaker",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of top liquidity fixtures",
            "schema": {
              "items": {
                "properties": {
                  "averageLiquidity": { "type": "number" },
                  "betgeniusId": { "type": "integer" },
                  "betradarId": { "type": "integer" },
                  "categoryName": { "type": "string" },
                  "fixtureId": { "type": "string" },
                  "flashscoreId": { "type": "string" },
                  "participant1Name": { "type": "string" },
                  "participant2Name": { "type": "string" },
                  "sofascoreId": { "type": "integer" },
                  "sportId": { "type": "integer" },
                  "sportName": { "type": "string" },
                  "startTime": { "type": "integer" },
                  "totalLiquidity": { "type": "number" },
                  "tournamentId": { "type": "integer" },
                  "tournamentName": { "type": "string" }
                },
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "security": [ { "QueryApiKeyAuth": [] } ],
        "summary": "Get the top 100 fixtures by average liquidity",
        "tags": [ "Liquidity" ]
      }
    },
    "/api/v2/liquidity/markets/top100": {
      "get": {
        "operationId": "getOdds5",
        "parameters": [
          {
            "description": "The sportId",
            "in": "query",
            "name": "sportId",
            "required": true,
            "type": "string"
          },
          {
            "description": "A string of bookmaker slugs (comma-separated)",
            "in": "query",
            "name": "bookmakers",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Odds for the specified fixture and bookmakers",
            "schema": { "type": "object" }
          }
        },
        "security": [ { "QueryApiKeyAuth": [] } ],
        "summary": "Get the top 100 markets by average liquidity",
        "tags": [ "Liquidity" ]
      }
    },
    "/api/v2/mapping": {
      "get": {
        "operationId": "getMapping",
        "parameters": [
          {
            "description": "The bookmaker slug (e.g., 'bet365')",
            "in": "query",
            "name": "bookmaker",
            "required": true,
            "type": "string"
          },
          {
            "description": "Comma-separated list of bookmakerFixtureIds to map",
            "in": "query",
            "name": "bookmakerFixtureIds",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A mapping of bookmakerFixtureIds to fixtureIds",
            "schema": {
              "items": {
                "properties": {
                  "bookmaker": { "type": "string" },
                  "bookmakerFixtureId": { "type": "string" },
                  "fixtureId": { "type": "integer" }
                },
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "security": [ { "QueryApiKeyAuth": [] } ],
        "summary": "Get mapping of bookmakerFixtureIds to fixtureIds for a given bookmaker",
        "tags": [ "Other" ]
      }
    },
    "/api/v2/markets": {
      "get": {
        "operationId": "getMarkets",
        "parameters": [
          {
            "default": 10,
            "description": "Filter by sportId",
            "in": "query",
            "name": "sportId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "A nested structure of markets with odds types",
            "schema": {
              "items": {
                "properties": {
                  "marketId": {
                    "description": "The unique identifier for the market",
                    "type": "integer"
                  },
                  "marketName": {
                    "description": "The translated name of the market",
                    "type": "string"
                  },
                  "marketNameShort": {
                    "description": "A short translated name of the market",
                    "type": "string"
                  },
                  "oddsTypes": {
                    "description": "The list of odds types associated with the market",
                    "items": {
                      "properties": {
                        "outcomeId": {
                          "description": "The unique identifier for the outcome",
                          "type": "integer"
                        },
                        "outcomeName": {
                          "description": "The translated name of the outcome",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "sportId": {
                    "description": "The sport ID associated with the market",
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "summary": "Get a nested structure of markets with odds types",
        "tags": [ "Markets" ]
      }
    },
    "/api/v2/media/bookmakers/{bookmaker}{version}": {
      "get": {
        "operationId": "mediaBookmaker",
        "responses": {
          "200": {
            "content": {
              "application/octet-stream": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": "The media file"
          },
          "400": {
            "description": "No media available for the given bookmaker and version",
            "schema": { "type": "object" }
          }
        },
        "summary": "Get media for a specific bookmaker",
        "tags": [ "Media" ]
      }
    },
    "/api/v2/media/categories/{a2}": {
      "get": {
        "operationId": "mediaCategory",
        "responses": {
          "200": {
            "content": {
              "application/octet-stream": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": "The media file"
          },
          "400": {
            "description": "No media available for the given country code",
            "schema": { "type": "object" }
          }
        },
        "summary": "Get media for a specific category",
        "tags": [ "Media" ]
      }
    },
    "/api/v2/media/participants/{participantId}": {
      "get": {
        "operationId": "mediaParticipant",
        "responses": {
          "200": {
            "content": {
              "application/octet-stream": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": "The media file"
          },
          "400": {
            "description": "No media available for the given participant ID",
            "schema": { "type": "object" }
          }
        },
        "summary": "Get media for a specific participant",
        "tags": [ "Media" ]
      }
    },
    "/api/v2/media/tournaments/{tournamentId}": {
      "get": {
        "operationId": "mediaTournament",
        "responses": {
          "200": {
            "content": {
              "application/octet-stream": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": "The media file"
          },
          "400": {
            "description": "No media available for the given tournament ID",
            "schema": { "type": "object" }
          }
        },
        "summary": "Get media for a specific tournament",
        "tags": [ "Media" ]
      }
    },
    "/api/v2/media/tournaments/{tournamentId}{version}": {
      "get": {
        "operationId": "mediaTournament",
        "responses": {
          "200": {
            "content": {
              "application/octet-stream": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": "The media file"
          },
          "400": {
            "description": "No media available for the given tournament ID",
            "schema": { "type": "object" }
          }
        },
        "summary": "Get media for a specific tournament",
        "tags": [ "Media" ]
      }
    },
    "/api/v2/odds": {
      "get": {
        "operationId": "getOdds1",
        "parameters": [
          {
            "description": "The fixture ID",
            "in": "query",
            "name": "fixtureId",
            "required": true,
            "type": "string"
          },
          {
            "description": "A string of bookmaker slugs (comma-separated)",
            "in": "query",
            "name": "bookmakers",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Odds for the specified fixture and bookmakers",
            "schema": { "type": "object" }
          }
        },
        "security": [ { "QueryApiKeyAuth": [] } ],
        "summary": "Get odds for an fixture and multiple bookmakers",
        "tags": [ "Odds" ]
      }
    },
    "/api/v2/odds/10sec": {
      "get": {
        "operationId": "getOdds4",
        "parameters": [
          {
            "description": "The sportId",
            "in": "query",
            "name": "sportId",
            "required": true,
            "type": "string"
          },
          {
            "description": "A string of bookmaker slugs (comma-separated)",
            "in": "query",
            "name": "bookmakers",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Odds for the specified fixture and bookmakers",
            "schema": { "type": "object" }
          }
        },
        "security": [ { "QueryApiKeyAuth": [] } ],
        "summary": "Get odds changes from the past 10 seconds by sport",
        "tags": [ "Odds" ]
      }
    },
    "/api/v2/odds/30sec": {
      "get": {
        "operationId": "getOdds5",
        "parameters": [
          {
            "description": "The sportId",
            "in": "query",
            "name": "sportId",
            "required": true,
            "type": "string"
          },
          {
            "description": "A string of bookmaker slugs (comma-separated)",
            "in": "query",
            "name": "bookmakers",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Odds for the specified fixture and bookmakers",
            "schema": { "type": "object" }
          }
        },
        "security": [ { "QueryApiKeyAuth": [] } ],
        "summary": "Get odds changes from the past 30 seconds by sport",
        "tags": [ "Odds" ]
      }
    },
    "/api/v2/odds/3sec": {
      "get": {
        "operationId": "getOdds3",
        "parameters": [
          {
            "description": "The sportId",
            "in": "query",
            "name": "sportId",
            "required": true,
            "type": "string"
          },
          {
            "description": "A string of bookmaker slugs (comma-separated)",
            "in": "query",
            "name": "bookmakers",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Odds for the specified fixture and bookmakers",
            "schema": { "type": "object" }
          }
        },
        "security": [ { "QueryApiKeyAuth": [] } ],
        "summary": "Get odds changes from the past 3 seconds by sport",
        "tags": [ "Odds" ]
      }
    },
    "/api/v2/odds/tournament": {
      "get": {
        "operationId": "getOdds2",
        "parameters": [
          {
            "description": "The tournament ID",
            "in": "query",
            "name": "tournamentId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The bookmaker slug",
            "in": "query",
            "name": "bookmaker",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Odds for the specified tournament and bookmaker",
            "schema": { "type": "object" }
          }
        },
        "security": [ { "QueryApiKeyAuth": [] } ],
        "summary": "Get odds for a tournament and a bookmaker",
        "tags": [ "Odds" ]
      }
    },
    "/api/v2/sports": {
      "get": {
        "operationId": "getSports",
        "parameters": [
          {
            "default": false,
            "description": "Filter sports that have odds available (True or False)",
            "in": "query",
            "name": "hasOdds",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of distinct sports",
            "schema": {
              "items": {
                "properties": {
                  "sportId": {
                    "description": "The unique identifier for the sport",
                    "type": "integer"
                  },
                  "sportName": {
                    "description": "The translated name of the sport",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "summary": "Get a list of sports",
        "tags": [ "Sports" ]
      }
    },
    "/api/v2/tournaments": {
      "get": {
        "operationId": "getTournaments",
        "parameters": [
          {
            "default": 10,
            "description": "Filter tournaments by sportId",
            "in": "query",
            "name": "sportId",
            "required": false,
            "type": "integer"
          },
          {
            "default": false,
            "description": "Filter tournaments that have odds available (True or False)",
            "in": "query",
            "name": "hasOdds",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of tournaments with translations",
            "schema": {
              "items": {
                "properties": {
                  "categorySlug": {
                    "description": "A slug representing the category of the tournament",
                    "type": "string"
                  },
                  "sportId": {
                    "description": "The sport ID associated with the tournament",
                    "type": "integer"
                  },
                  "tournamentId": {
                    "description": "The unique identifier for the tournament",
                    "type": "integer"
                  },
                  "tournamentName": {
                    "description": "The translated name of the tournament",
                    "type": "string"
                  },
                  "tournamentSlug": {
                    "description": "A unique slug for the tournament",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "summary": "Get a nested structure of tournaments",
        "tags": [ "Tournaments" ]
      }
    },
    "/api/v2/{language}/events": {
      "get": {
        "operationId": "getEvents1",
        "parameters": [
          {
            "description": "Filter by tournamentId (primary parameter)",
            "in": "query",
            "name": "tournamentId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter by sportId (primary parameter)",
            "in": "query",
            "name": "sportId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter by participantId (primary parameter)",
            "in": "query",
            "name": "participantId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter by playerId (primary parameter)",
            "in": "query",
            "name": "playerId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "A grouped list of tournaments and fixtures including events",
            "schema": {
              "properties": {
                "sportId": {
                  "description": "The ID of the sport",
                  "type": "integer"
                },
                "sportName": {
                  "description": "The name of the sport",
                  "type": "string"
                },
                "tournaments": {
                  "items": {
                    "properties": {
                      "categoryName": {
                        "description": "The category name of the tournament",
                        "type": "string"
                      },
                      "fixtures": {
                        "items": {
                          "properties": {
                            "externalProviders": {
                              "properties": {
                                "betgeniusId": {
                                  "description": "The BetGenius ID",
                                  "type": "integer"
                                },
                                "betradarId": {
                                  "description": "The BetRadar ID",
                                  "type": "integer"
                                },
                                "flashscoreId": {
                                  "description": "The FlashScore ID",
                                  "type": "string"
                                },
                                "sofascoreId": {
                                  "description": "The SofaScore ID",
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "fixtureId": {
                              "description": "The ID of the fixture",
                              "type": "string"
                            },
                            "participant1Name": {
                              "description": "The name of the first participant",
                              "type": "string"
                            },
                            "participant2Name": {
                              "description": "The name of the second participant",
                              "type": "string"
                            },
                            "startTime": {
                              "description": "The start time of the fixture (epoch timestamp)",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "tournamentId": {
                        "description": "The ID of the tournament",
                        "type": "integer"
                      },
                      "tournamentName": {
                        "description": "The name of the tournament",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "security": [ { "QueryApiKeyAuth": [] } ],
        "summary": "Get in-play actions by tournamentId, sportId, participantId or playerId",
        "tags": [ "In-Play Events" ]
      }
    },
    "/api/v2/{language}/fixtures": {
      "get": {
        "operationId": "getFixtures1",
        "parameters": [
          {
            "description": "Filter by tournamentId (primary parameter)",
            "in": "query",
            "name": "tournamentId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter by sportId (primary parameter)",
            "in": "query",
            "name": "sportId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter by participantId (primary parameter)",
            "in": "query",
            "name": "participantId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter by playerId (primary parameter)",
            "in": "query",
            "name": "playerId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A single bookmaker slug (primary parameter)",
            "in": "query",
            "name": "bookmaker",
            "required": false,
            "type": "string"
          },
          {
            "default": true,
            "description": "Whether bookmaker fixtures must overlap (AND logic)  (secondary parameter)",
            "in": "query",
            "name": "overlap",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A grouped list of tournaments and fixtures",
            "schema": {
              "properties": {
                "sportId": {
                  "description": "The ID of the sport",
                  "type": "integer"
                },
                "sportName": {
                  "description": "The name of the sport",
                  "type": "string"
                },
                "tournaments": {
                  "items": {
                    "properties": {
                      "categoryName": {
                        "description": "The category name of the tournament",
                        "type": "string"
                      },
                      "fixtures": {
                        "items": {
                          "properties": {
                            "externalProviders": {
                              "properties": {
                                "betgeniusId": {
                                  "description": "The BetGenius ID",
                                  "type": "integer"
                                },
                                "betradarId": {
                                  "description": "The BetRadar ID",
                                  "type": "integer"
                                },
                                "flashscoreId": {
                                  "description": "The FlashScore ID",
                                  "type": "string"
                                },
                                "sofascoreId": {
                                  "description": "The SofaScore ID",
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "fixtureId": {
                              "description": "The ID of the fixture",
                              "type": "string"
                            },
                            "participant1Name": {
                              "description": "The name of the first participant",
                              "type": "string"
                            },
                            "participant2Name": {
                              "description": "The name of the second participant",
                              "type": "string"
                            },
                            "startTime": {
                              "description": "The start time of the fixture (epoch timestamp)",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "tournamentId": {
                        "description": "The ID of the tournament",
                        "type": "integer"
                      },
                      "tournamentName": {
                        "description": "The name of the tournament",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "security": [ { "QueryApiKeyAuth": [] } ],
        "summary": "Get fixtures with odds and external providers by tournamentId, sportId, participantId, playerId or bookmaker",
        "tags": [ "Fixtures" ]
      }
    },
    "/api/v2/{language}/fixtures/live": {
      "get": {
        "operationId": "getFixtures3",
        "responses": {
          "200": {
            "description": "A grouped list of live fixtures and their metadata",
            "schema": {
              "items": {
                "properties": {
                  "categoryName": {
                    "description": "The category name of the tournament",
                    "type": "string"
                  },
                  "externalProviders": {
                    "properties": {
                      "betgeniusId": { "type": "integer" },
                      "betradarId": { "type": "integer" },
                      "flashscoreId": { "type": "string" },
                      "sofascoreId": { "type": "integer" }
                    },
                    "type": "object"
                  },
                  "fixtureId": {
                    "description": "The ID of the fixture",
                    "type": "string"
                  },
                  "live": {
                    "description": "Whether the fixture is live",
                    "type": "boolean"
                  },
                  "participant1Name": {
                    "description": "The name of the first participant",
                    "type": "string"
                  },
                  "participant2Name": {
                    "description": "The name of the second participant",
                    "type": "string"
                  },
                  "sportId": {
                    "description": "The ID of the sport",
                    "type": "integer"
                  },
                  "sportName": {
                    "description": "The name of the sport",
                    "type": "string"
                  },
                  "startTime": {
                    "description": "The start time of the fixture (epoch timestamp)",
                    "type": "integer"
                  },
                  "stats": {
                    "description": "Additional live fixture stats",
                    "type": "object"
                  },
                  "tournamentId": {
                    "description": "The ID of the tournament",
                    "type": "integer"
                  },
                  "tournamentName": {
                    "description": "The name of the tournament",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "security": [ { "QueryApiKeyAuth": [] } ],
        "summary": "Get live fixtures with odds and additional metadata",
        "tags": [ "Fixtures" ]
      }
    },
    "/api/v2/{language}/fixtures/today": {
      "get": {
        "operationId": "getFixtures2",
        "responses": {
          "200": {
            "description": "A grouped list of today's tournaments and fixtures with odds",
            "schema": {
              "items": {
                "properties": {
                  "sportId": {
                    "description": "The ID of the sport",
                    "type": "integer"
                  },
                  "sportName": {
                    "description": "The name of the sport",
                    "type": "string"
                  },
                  "tournaments": {
                    "items": {
                      "properties": {
                        "categoryName": {
                          "description": "The category name of the tournament",
                          "type": "string"
                        },
                        "fixtures": {
                          "items": {
                            "properties": {
                              "externalProviders": {
                                "properties": {
                                  "betgeniusId": {
                                    "description": "The BetGenius ID",
                                    "type": "integer"
                                  },
                                  "betradarId": {
                                    "description": "The BetRadar ID",
                                    "type": "integer"
                                  },
                                  "flashscoreId": {
                                    "description": "The FlashScore ID",
                                    "type": "string"
                                  },
                                  "sofascoreId": {
                                    "description": "The SofaScore ID",
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "fixtureId": {
                                "description": "The ID of the fixture",
                                "type": "string"
                              },
                              "participant1Name": {
                                "description": "The name of the first participant",
                                "type": "string"
                              },
                              "participant2Name": {
                                "description": "The name of the second participant",
                                "type": "string"
                              },
                              "startTime": {
                                "description": "The start time of the fixture (epoch timestamp)",
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "tournamentId": {
                          "description": "The ID of the tournament",
                          "type": "integer"
                        },
                        "tournamentName": {
                          "description": "The name of the tournament",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "security": [ { "QueryApiKeyAuth": [] } ],
        "summary": "Get today's fixtures with odds grouped by sport and tournament",
        "tags": [ "Fixtures" ]
      }
    },
    "/api/v2/{language}/historical/events": {
      "get": {
        "operationId": "getHistEvents",
        "parameters": [
          {
            "description": "The fixture ID",
            "in": "query",
            "name": "fixtureId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Events for the specified fixture",
            "schema": { "type": "object" }
          }
        },
        "security": [ { "QueryApiKeyAuth": [] } ],
        "summary": "Get in-play events for a finished fixture",
        "tags": [ "Historical Data" ]
      }
    },
    "/api/v2/{language}/historical/fixtures": {
      "get": {
        "operationId": "getHistFixtures",
        "parameters": [
          {
            "description": "Filter by tournamentId (primary parameter)",
            "in": "query",
            "name": "tournamentId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter by participantId (primary parameter)",
            "in": "query",
            "name": "participantId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filter by playerId (primary parameter)",
            "in": "query",
            "name": "playerId",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Comma-separated list of fixture IDs to filter by (primary parameter)",
            "in": "query",
            "name": "fixtureIds",
            "required": false,
            "type": "string"
          }
        ],
        "responses": { "200": { "description": "A grouped list of tournaments and fixtures" } },
        "summary": "Get all historical fixtures and external providers by tournamentId, participantId, playerId, or fixtureIds",
        "tags": [ "Historical Data" ]
      }
    },
    "/api/v2/{language}/historical/odds": {
      "get": {
        "operationId": "getHistOdds",
        "parameters": [
          {
            "description": "The fixture ID",
            "in": "query",
            "name": "fixtureId",
            "required": true,
            "type": "string"
          },
          {
            "description": "A string of bookmaker slugs (comma-separated)",
            "in": "query",
            "name": "bookmakers",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Odds for the specified fixture and bookmakers",
            "schema": { "type": "object" }
          }
        },
        "security": [ { "QueryApiKeyAuth": [] } ],
        "summary": "Get odds for a finished fixture and multiple bookmakers",
        "tags": [ "Historical Data" ]
      }
    },
    "/api/v2/{language}/liquidity/fixtures/top100": {
      "get": {
        "operationId": "getFixtures4",
        "parameters": [
          {
            "description": "Comma-separated list of bookmaker slugs to filter (optional)",
            "in": "query",
            "name": "bookmaker",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of top liquidity fixtures",
            "schema": {
              "items": {
                "properties": {
                  "averageLiquidity": { "type": "number" },
                  "betgeniusId": { "type": "integer" },
                  "betradarId": { "type": "integer" },
                  "categoryName": { "type": "string" },
                  "fixtureId": { "type": "string" },
                  "flashscoreId": { "type": "string" },
                  "participant1Name": { "type": "string" },
                  "participant2Name": { "type": "string" },
                  "sofascoreId": { "type": "integer" },
                  "sportId": { "type": "integer" },
                  "sportName": { "type": "string" },
                  "startTime": { "type": "integer" },
                  "totalLiquidity": { "type": "number" },
                  "tournamentId": { "type": "integer" },
                  "tournamentName": { "type": "string" }
                },
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "security": [ { "QueryApiKeyAuth": [] } ],
        "summary": "Get the top 100 fixtures by average liquidity",
        "tags": [ "Liquidity" ]
      }
    },
    "/api/v2/{language}/liquidity/markets/top100": {
      "get": {
        "operationId": "getOdds5",
        "parameters": [
          {
            "description": "The sportId",
            "in": "query",
            "name": "sportId",
            "required": true,
            "type": "string"
          },
          {
            "description": "A string of bookmaker slugs (comma-separated)",
            "in": "query",
            "name": "bookmakers",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Odds for the specified fixture and bookmakers",
            "schema": { "type": "object" }
          }
        },
        "security": [ { "QueryApiKeyAuth": [] } ],
        "summary": "Get the top 100 markets by average liquidity",
        "tags": [ "Liquidity" ]
      }
    },
    "/api/v2/{language}/markets": {
      "get": {
        "operationId": "getMarkets",
        "parameters": [
          {
            "default": 10,
            "description": "Filter by sportId",
            "in": "query",
            "name": "sportId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "A nested structure of markets with odds types",
            "schema": {
              "items": {
                "properties": {
                  "marketId": {
                    "description": "The unique identifier for the market",
                    "type": "integer"
                  },
                  "marketName": {
                    "description": "The translated name of the market",
                    "type": "string"
                  },
                  "marketNameShort": {
                    "description": "A short translated name of the market",
                    "type": "string"
                  },
                  "oddsTypes": {
                    "description": "The list of odds types associated with the market",
                    "items": {
                      "properties": {
                        "outcomeId": {
                          "description": "The unique identifier for the outcome",
                          "type": "integer"
                        },
                        "outcomeName": {
                          "description": "The translated name of the outcome",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "sportId": {
                    "description": "The sport ID associated with the market",
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "summary": "Get a nested structure of markets with odds types",
        "tags": [ "Markets" ]
      }
    },
    "/api/v2/{language}/odds": {
      "get": {
        "operationId": "getOdds1",
        "parameters": [
          {
            "description": "The fixture ID",
            "in": "query",
            "name": "fixtureId",
            "required": true,
            "type": "string"
          },
          {
            "description": "A string of bookmaker slugs (comma-separated)",
            "in": "query",
            "name": "bookmakers",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Odds for the specified fixture and bookmakers",
            "schema": { "type": "object" }
          }
        },
        "security": [ { "QueryApiKeyAuth": [] } ],
        "summary": "Get odds for an fixture and multiple bookmakers",
        "tags": [ "Odds" ]
      }
    },
    "/api/v2/{language}/odds/10sec": {
      "get": {
        "operationId": "getOdds4",
        "parameters": [
          {
            "description": "The sportId",
            "in": "query",
            "name": "sportId",
            "required": true,
            "type": "string"
          },
          {
            "description": "A string of bookmaker slugs (comma-separated)",
            "in": "query",
            "name": "bookmakers",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Odds for the specified fixture and bookmakers",
            "schema": { "type": "object" }
          }
        },
        "security": [ { "QueryApiKeyAuth": [] } ],
        "summary": "Get odds changes from the past 10 seconds by sport",
        "tags": [ "Odds" ]
      }
    },
    "/api/v2/{language}/odds/30sec": {
      "get": {
        "operationId": "getOdds5",
        "parameters": [
          {
            "description": "The sportId",
            "in": "query",
            "name": "sportId",
            "required": true,
            "type": "string"
          },
          {
            "description": "A string of bookmaker slugs (comma-separated)",
            "in": "query",
            "name": "bookmakers",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Odds for the specified fixture and bookmakers",
            "schema": { "type": "object" }
          }
        },
        "security": [ { "QueryApiKeyAuth": [] } ],
        "summary": "Get odds changes from the past 30 seconds by sport",
        "tags": [ "Odds" ]
      }
    },
    "/api/v2/{language}/odds/3sec": {
      "get": {
        "operationId": "getOdds3",
        "parameters": [
          {
            "description": "The sportId",
            "in": "query",
            "name": "sportId",
            "required": true,
            "type": "string"
          },
          {
            "description": "A string of bookmaker slugs (comma-separated)",
            "in": "query",
            "name": "bookmakers",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Odds for the specified fixture and bookmakers",
            "schema": { "type": "object" }
          }
        },
        "security": [ { "QueryApiKeyAuth": [] } ],
        "summary": "Get odds changes from the past 3 seconds by sport",
        "tags": [ "Odds" ]
      }
    },
    "/api/v2/{language}/odds/tournament": {
      "get": {
        "operationId": "getOdds2",
        "parameters": [
          {
            "description": "The tournament ID",
            "in": "query",
            "name": "tournamentId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The bookmaker slug",
            "in": "query",
            "name": "bookmaker",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Odds for the specified tournament and bookmaker",
            "schema": { "type": "object" }
          }
        },
        "security": [ { "QueryApiKeyAuth": [] } ],
        "summary": "Get odds for a tournament and a bookmaker",
        "tags": [ "Odds" ]
      }
    },
    "/api/v2/{language}/sports": {
      "get": {
        "operationId": "getSports",
        "parameters": [
          {
            "default": false,
            "description": "Filter sports that have odds available (True or False)",
            "in": "query",
            "name": "hasOdds",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of distinct sports",
            "schema": {
              "items": {
                "properties": {
                  "sportId": {
                    "description": "The unique identifier for the sport",
                    "type": "integer"
                  },
                  "sportName": {
                    "description": "The translated name of the sport",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "summary": "Get a list of sports",
        "tags": [ "Sports" ]
      }
    },
    "/api/v2/{language}/tournaments": {
      "get": {
        "operationId": "getTournaments",
        "parameters": [
          {
            "default": 10,
            "description": "Filter tournaments by sportId",
            "in": "query",
            "name": "sportId",
            "required": false,
            "type": "integer"
          },
          {
            "default": false,
            "description": "Filter tournaments that have odds available (True or False)",
            "in": "query",
            "name": "hasOdds",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of tournaments with translations",
            "schema": {
              "items": {
                "properties": {
                  "categorySlug": {
                    "description": "A slug representing the category of the tournament",
                    "type": "string"
                  },
                  "sportId": {
                    "description": "The sport ID associated with the tournament",
                    "type": "integer"
                  },
                  "tournamentId": {
                    "description": "The unique identifier for the tournament",
                    "type": "integer"
                  },
                  "tournamentName": {
                    "description": "The translated name of the tournament",
                    "type": "string"
                  },
                  "tournamentSlug": {
                    "description": "A unique slug for the tournament",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "summary": "Get a nested structure of tournaments",
        "tags": [ "Tournaments" ]
      }
    }
  },
  "schemes": [ "https" ],
  "securityDefinitions": {
    "QueryApiKeyAuth": {
      "description": "Provide your API-Key as a query parameter.",
      "in": "query",
      "name": "API-Key",
      "type": "apiKey"
    }
  },
  "swagger": "2.0",
  "tags": [
    {
      "description": "Endpoints related to bookmakers",
      "name": "Bookmakers"
    },
    {
      "description": "Endpoints providing sports information",
      "name": "Sports"
    },
    {
      "description": "Endpoints providing tournament details",
      "name": "Tournaments"
    },
    {
      "description": "Endpoints for retrieving upcoming and live fixtures",
      "name": "Fixtures"
    },
    {
      "description": "Endpoints for market information",
      "name": "Markets"
    },
    {
      "description": "Endpoints for managing and retrieving odds",
      "name": "Odds"
    },
    {
      "description": "Endpoints for live actions by fixture",
      "name": "In-Play Events"
    },
    {
      "description": "Endpoints for historical fixtures, odds and in-play events",
      "name": "Historical Data"
    },
    {
      "description": "Endpoints for media-related resources",
      "name": "Media"
    },
    {
      "description": "Miscellaneous endpoints not categorized into specific groups",
      "name": "Other"
    }
  ]
}
